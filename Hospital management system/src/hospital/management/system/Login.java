package hospital.management.system;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.sql.ResultSet;import java.awt.image.BufferedImage; // Needed for BufferedImagepublic class Login extends JFrame implements ActionListener {    JTextField textField;    JPasswordField jPasswordField;    JButton b1; // Removed b2 (Cancel button) as per screenshot    JLabel messageLabel; // For displaying messages like "Invalid username or password"    Login() {        // Set the title for the login window        setTitle("Hospital Management System - Login");        // Set layout to null for absolute positioning of components within the JFrame        setLayout(null);        // Set background color for the content pane (matches the green background in the screenshot)        getContentPane().setBackground(new Color(38, 166, 154)); // A teal-green color similar to the screenshot        // Create a JPanel to act as the white central card        JPanel loginPanel = new JPanel();        loginPanel.setLayout(null); // Use null layout for precise positioning within this panel        loginPanel.setBackground(Color.white); // White background for the card        loginPanel.setBounds(200, 70, 350, 370); // Adjust position and size to center and fit content        loginPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20)); // Add padding        add(loginPanel); // Add the panel to the JFrame        // --- Logo/Header Section (PatientPathway HMS) ---        // The screenshot shows a solid teal block for "PatientPathway HMS"        // We'll create a JLabel with text and background color        JLabel logoTextLabel = new JLabel("PatientPathway Healthcare", SwingConstants.CENTER);        logoTextLabel.setBounds(25, 20, 300, 40); // Centered within the panel        logoTextLabel.setBackground(new Color(160, 219, 201)); // Light teal background        logoTextLabel.setForeground(new Color(45, 90, 96)); // Dark teal text        logoTextLabel.setFont(new Font("Tahoma", Font.BOLD, 14));        logoTextLabel.setOpaque(true); // Make background visible        loginPanel.add(logoTextLabel);        // "Welcome to HMS" Heading        JLabel welcomeLabel = new JLabel("Welcome to TMH", SwingConstants.CENTER);        welcomeLabel.setBounds(25, 80, 300, 30); // Below the logo        welcomeLabel.setFont(new Font("SansSerif", Font.BOLD, 22)); // Font similar to screenshot        welcomeLabel.setForeground(new Color(51, 51, 51)); // Dark gray text        loginPanel.add(welcomeLabel);        // Username Label        JLabel namelabel = new JLabel("Username");        namelabel.setBounds(35, 140, 100, 25);        namelabel.setFont(new Font("SansSerif", Font.PLAIN, 15)); // Adjusted font for consistency        namelabel.setForeground(new Color(102, 102, 102)); // Darker gray for labels        loginPanel.add(namelabel);        // Username Text Field        textField = new JTextField();        textField.setBounds(35, 170, 280, 35); // Wider field        textField.setFont(new Font("SansSerif", Font.PLAIN, 14));        textField.setBackground(new Color(248, 248, 248)); // Very light gray background for input        textField.setForeground(Color.BLACK);        textField.setBorder(BorderFactory.createLineBorder(new Color(220, 220, 220))); // Subtle border        textField.putClientProperty("JComponent.roundRect", true); // For rounded corners (if LookAndFeel supports it)        loginPanel.add(textField);        // Password Label        JLabel password = new JLabel("Password");        password.setBounds(35, 215, 100, 25);        password.setFont(new Font("SansSerif", Font.PLAIN, 15));        password.setForeground(new Color(102, 102, 102));        loginPanel.add(password);        // Password Field        jPasswordField = new JPasswordField();        jPasswordField.setBounds(35, 245, 280, 35); // Wider field        jPasswordField.setFont(new Font("SansSerif", Font.PLAIN, 14));        jPasswordField.setBackground(new Color(248, 248, 248));        jPasswordField.setForeground(Color.BLACK);        jPasswordField.setBorder(BorderFactory.createLineBorder(new Color(220, 220, 220)));        jPasswordField.putClientProperty("JComponent.roundRect", true); // For rounded corners        loginPanel.add(jPasswordField);        // Login Button        b1 = new JButton("Login");        b1.setBounds(35, 300, 280, 40); // Wider and taller button        b1.setFont(new Font("SansSerif", Font.BOLD, 16));        b1.setBackground(new Color(0, 128, 128)); // Darker teal button for stronger contrast        b1.setForeground(Color.white);        b1.setFocusPainted(false); // Remove focus border        b1.setBorderPainted(false); // Remove default border        b1.setRolloverEnabled(true); // Enable rollover effects        b1.addActionListener(this);        loginPanel.add(b1);        // Forgot Password Link        JButton forgotPasswordButton = new JButton("Forgot Password?");        forgotPasswordButton.setBounds(100, 345, 150, 20); // Position below login button        forgotPasswordButton.setFont(new Font("SansSerif", Font.PLAIN, 12));        forgotPasswordButton.setForeground(new Color(0, 128, 128)); // Teal color for the link        forgotPasswordButton.setBorderPainted(false);        forgotPasswordButton.setContentAreaFilled(false); // Make it look like a link        forgotPasswordButton.setCursor(new Cursor(Cursor.HAND_CURSOR));        forgotPasswordButton.addActionListener(e -> JOptionPane.showMessageDialog(this, "Try Remembering Password After Some Time!", "Information", JOptionPane.INFORMATION_MESSAGE));        loginPanel.add(forgotPasswordButton);        // Message Label (for login feedback)        messageLabel = new JLabel("", SwingConstants.CENTER);        messageLabel.setBounds(25, 280, 300, 20); // Position above login button        messageLabel.setFont(new Font("SansSerif", Font.PLAIN, 12));        loginPanel.add(messageLabel);        // Set the size of the JFrame. Make it larger to accommodate the central panel.        setSize(750, 550); // Increased size to fit the new layout        // Set the window location on the screen to center it        setLocationRelativeTo(null); // Centers the frame on the screen        // Ensure the frame is visible        setVisible(true);        // Make the frame non-resizable        setResizable(false);        // Set default close operation        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    }    @Override    public void actionPerformed(ActionEvent e) {        if (e.getSource() == b1) {            try {                conn c = new conn();                String user = textField.getText();                String Pass = new String(jPasswordField.getPassword());                String q = "select * from login where ID = '" + user + "' and  PW = '" + Pass + "'";                ResultSet resultSet = c.statement.executeQuery(q);                if (resultSet.next()) {                    messageLabel.setForeground(new Color(46, 204, 113)); // Green for success                    messageLabel.setText("Login successful! Redirecting...");                    // Give a slight delay before redirecting for the message to be seen                    Timer timer = new Timer(1000, new ActionListener() {                        @Override                        public void actionPerformed(ActionEvent e) {                            new Reception();                            setVisible(false);                            ((Timer)e.getSource()).stop(); // Stop the timer                        }                    });                    timer.setRepeats(false); // Only fire once                    timer.start();                } else {                    messageLabel.setForeground(new Color(231, 76, 60)); // Red for error                    messageLabel.setText("Invalid username or password.");                    // Clear the message after a few seconds                    Timer timer = new Timer(3000, new ActionListener() {                        @Override                        public void actionPerformed(ActionEvent e) {                            messageLabel.setText("");                            ((Timer)e.getSource()).stop();                        }                    });                    timer.setRepeats(false);                    timer.start();                }            } catch (Exception E) {                E.printStackTrace();                messageLabel.setForeground(new Color(231, 76, 60)); // Red for error                messageLabel.setText("An error occurred: " + E.getMessage());                Timer timer = new Timer(3000, new ActionListener() {                    @Override                    public void actionPerformed(ActionEvent e) {                        messageLabel.setText("");                        ((Timer)e.getSource()).stop();                    }                });                timer.setRepeats(false);                timer.start();            }        }        // The Cancel button (b2) and its action are removed as per the screenshot    }    public static void main(String[] args) {        // Set a modern Look and Feel for better aesthetics (e.g., Nimbus, FlatLaf)        try {            // UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");            // Or use FlatLaf (requires adding library): https://www.formdev.com/flatlaf/            // UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatDarculaLaf());        } catch (Exception e) {            e.printStackTrace();        }        new Login();    }}